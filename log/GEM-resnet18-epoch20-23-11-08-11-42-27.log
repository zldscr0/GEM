{'data_root': '/data/bzx_yjy/cifar100', 'image_size': 32, 'pin_memory': False, 'augment': True, 'workers': 8, 'device_ids': 1, 'n_gpu': 1, 'seed': 1993, 'deterministic': True, 'epoch': 20, 'batch_size': 128, 'val_per_epoch': 5, 'optimzer': {'name': 'SGD', 'kwargs': {'lr': 0.1}}, 'lr_scheduler': {'name': 'StepLR', 'kwargs': {'gamma': 0.1, 'step_size': 10}}, 'warmup': 3, 'includes': ['headers/data.yaml', 'headers/device.yaml', 'headers/model.yaml', 'headers/optimizer.yaml', 'backbones/resnet12.yaml'], 'save_path': './', 'init_cls_num': 20, 'inc_cls_num': 20, 'task_num': 5, 'optimizer': {'name': 'SGD', 'kwargs': {'lr': 0.05}}, 'backbone': {'name': 'resnet18', 'kwargs': {'num_classes': 100, 'args': {'dataset': 'cifar100'}}}, 'buffer': {'name': 'LinearBuffer', 'kwargs': {'buffer_size': 0, 'batch_size': 32, 'strategy': 'random'}}, 'classifier': {'name': 'GEM', 'kwargs': {'num_class': 100, 'feat_dim': 512, 'n_memories': 5120, 'n_task': 5, 'memory_strength': 0}}, 'rank': 0}
GEM(
  (net): ResNet(
    (conv1): Sequential(
      (0): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (layer1): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): BasicBlock(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (layer2): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (downsample): Sequential(
          (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (layer3): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (downsample): Sequential(
          (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (layer4): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (downsample): Sequential(
          (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))
  )
  (classifier): Linear(in_features=512, out_features=100, bias=True)
  (ce): CrossEntropyLoss()
)
Trainable params in the model: 11220132
SGD (
Parameter Group 0
    dampening: 0
    differentiable: False
    foreach: None
    initial_lr: 0.05
    lr: 0.016666666666666666
    maximize: False
    momentum: 0
    nesterov: False
    weight_decay: 0
)
================Task 0 Start!================
SGD (
Parameter Group 0
    dampening: 0
    differentiable: False
    foreach: None
    initial_lr: 0.05
    lr: 0.016666666666666666
    maximize: False
    momentum: 0
    nesterov: False
    weight_decay: 0
)
================Task 0 Training!================
The training samples number: 10000
learning rate: [0.016666666666666666]
================ Train on the train set ================
Epoch [0/20] |	Loss: 2.527 	Average Acc: 0.225 
learning rate: [0.03333333333333333]
================ Train on the train set ================
Epoch [1/20] |	Loss: 2.133 	Average Acc: 0.345 
learning rate: [0.05]
================ Train on the train set ================
Epoch [2/20] |	Loss: 1.936 	Average Acc: 0.408 
learning rate: [0.05]
================ Train on the train set ================
Epoch [3/20] |	Loss: 1.561 	Average Acc: 0.514 
learning rate: [0.05]
================ Train on the train set ================
Epoch [4/20] |	Loss: 1.200 	Average Acc: 0.621 
================ Test on the test set ================
 * Average Acc: 0.430 Best acc 0.430
 Per-Task Acc:[0.43]
learning rate: [0.05]
================ Train on the train set ================
Epoch [5/20] |	Loss: 0.831 	Average Acc: 0.733 
learning rate: [0.05]
================ Train on the train set ================
Epoch [6/20] |	Loss: 0.485 	Average Acc: 0.847 
learning rate: [0.05]
================ Train on the train set ================
Epoch [7/20] |	Loss: 0.220 	Average Acc: 0.936 
learning rate: [0.05]
================ Train on the train set ================
Epoch [8/20] |	Loss: 0.092 	Average Acc: 0.977 
learning rate: [0.05]
================ Train on the train set ================
Epoch [9/20] |	Loss: 0.037 	Average Acc: 0.992 
================ Test on the test set ================
 * Average Acc: 0.590 Best acc 0.590
 Per-Task Acc:[0.59]
learning rate: [0.05]
================ Train on the train set ================
Epoch [10/20] |	Loss: 0.015 	Average Acc: 0.997 
learning rate: [0.05]
================ Train on the train set ================
Epoch [11/20] |	Loss: 0.006 	Average Acc: 0.999 
learning rate: [0.005000000000000001]
================ Train on the train set ================
Epoch [12/20] |	Loss: 0.003 	Average Acc: 1.000 
learning rate: [0.005000000000000001]
================ Train on the train set ================
Epoch [13/20] |	Loss: 0.003 	Average Acc: 1.000 
learning rate: [0.005000000000000001]
================ Train on the train set ================
Epoch [14/20] |	Loss: 0.002 	Average Acc: 1.000 
================ Test on the test set ================
 * Average Acc: 0.610 Best acc 0.610
 Per-Task Acc:[0.61]
learning rate: [0.005000000000000001]
================ Train on the train set ================
Epoch [15/20] |	Loss: 0.003 	Average Acc: 1.000 
learning rate: [0.005000000000000001]
================ Train on the train set ================
Epoch [16/20] |	Loss: 0.003 	Average Acc: 1.000 
learning rate: [0.005000000000000001]
================ Train on the train set ================
Epoch [17/20] |	Loss: 0.002 	Average Acc: 1.000 
learning rate: [0.005000000000000001]
================ Train on the train set ================
Epoch [18/20] |	Loss: 0.002 	Average Acc: 1.000 
learning rate: [0.005000000000000001]
================ Train on the train set ================
Epoch [19/20] |	Loss: 0.002 	Average Acc: 1.000 
================ Test on the test set ================
 * Average Acc: 0.620 Best acc 0.620
 Per-Task Acc:[0.62]
================Task 1 Start!================
SGD (
Parameter Group 0
    dampening: 0
    differentiable: False
    foreach: None
    initial_lr: 0.05
    lr: 0.016666666666666666
    maximize: False
    momentum: 0
    nesterov: False
    weight_decay: 0
)
================Task 1 Training!================
The training samples number: 10000
learning rate: [0.016666666666666666]
================ Train on the train set ================
Epoch [0/20] |	Loss: 3.179 	Average Acc: 0.163 
learning rate: [0.03333333333333333]
================ Train on the train set ================
Epoch [1/20] |	Loss: 1.853 	Average Acc: 0.448 
learning rate: [0.05]
================ Train on the train set ================
Epoch [2/20] |	Loss: 1.314 	Average Acc: 0.577 
learning rate: [0.05]
================ Train on the train set ================
Epoch [3/20] |	Loss: 0.916 	Average Acc: 0.715 
learning rate: [0.05]
================ Train on the train set ================
Epoch [4/20] |	Loss: 0.558 	Average Acc: 0.849 
================ Test on the test set ================
 * Average Acc: 0.320 Best acc 0.320
 Per-Task Acc:[0.06, 0.58]
learning rate: [0.05]
================ Train on the train set ================
Epoch [5/20] |	Loss: 0.280 	Average Acc: 0.954 
learning rate: [0.05]
================ Train on the train set ================
Epoch [6/20] |	Loss: 0.119 	Average Acc: 0.994 
learning rate: [0.05]
================ Train on the train set ================
Epoch [7/20] |	Loss: 0.057 	Average Acc: 1.000 
learning rate: [0.05]
================ Train on the train set ================
Epoch [8/20] |	Loss: 0.035 	Average Acc: 1.000 
learning rate: [0.05]
================ Train on the train set ================
Epoch [9/20] |	Loss: 0.025 	Average Acc: 1.000 
================ Test on the test set ================
 * Average Acc: 0.385 Best acc 0.385
 Per-Task Acc:[0.17, 0.6]
learning rate: [0.05]
================ Train on the train set ================
Epoch [10/20] |	Loss: 0.019 	Average Acc: 1.000 
learning rate: [0.05]
================ Train on the train set ================
Epoch [11/20] |	Loss: 0.015 	Average Acc: 1.000 
learning rate: [0.005000000000000001]
================ Train on the train set ================
Epoch [12/20] |	Loss: 0.013 	Average Acc: 1.000 
learning rate: [0.005000000000000001]
================ Train on the train set ================
Epoch [13/20] |	Loss: 0.013 	Average Acc: 1.000 
learning rate: [0.005000000000000001]
================ Train on the train set ================
Epoch [14/20] |	Loss: 0.012 	Average Acc: 1.000 
================ Test on the test set ================
 * Average Acc: 0.390 Best acc 0.390
 Per-Task Acc:[0.18, 0.6]
learning rate: [0.005000000000000001]
================ Train on the train set ================
